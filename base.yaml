swagger: '2.0'
info:
  description: extensions
  title: extensions
  version: '1.0'
basePath: /
paths:
  /simple-order1:
    post:
      summary: Place an order
      description: ''
      operationId: placeSimpleOrder1
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: order placed
          required: true
          schema:
            $ref: '#/definitions/SimpleOrder1'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleOrder1'
        '400':
          description: Invalid Order
  /simple-order2:
    post:
      summary: Place an order
      description: ''
      operationId: placeSimpleOrder2
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: order placed
          required: true
          schema:
            $ref: '#/definitions/SimpleOrder2'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleOrder2'
        '400':
          description: Invalid Order
  /simple-order3:
    post:
      summary: Place an order
      description: ''
      operationId: placeSimpleOrder3
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: order placed
          required: true
          schema:
            $ref: '#/definitions/SimpleOrder3'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleOrder3'
        '400':
          description: Invalid Order
  /complex-order:
    post:
      summary: Place an order
      description: ''
      operationId: placeComplexOrder
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: order placed
          required: true
          schema:
            $ref: '#/definitions/ComplexOrder'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ComplexOrder'
        '400':
          description: Invalid Order
definitions:
  Extensions:
    # produces a Map
    type: object
    additionalProperties:
      type: object
  Object1:
    type: object
    properties:
      name:
        type: string
  Object2:
    type: object
    properties:
      color:
        type: string
  Extendable:
    type: object
    properties:
      extensions:
        # produces a Map
        type: object
        additionalProperties:
          type: object
  SimpleOrder1:
    type: object
    properties:
      id:
        type: integer
        format: int64
      extensions:
        #
        # produces an Object which is a Map if object
        # can also get other types such as string so it is not the best
        # in order to use a cast must be done
        #
        # @JsonProperty("extensions")
        # private Object extensions = null;
        #
        type: object
        x-amdocs:
          refDefinition: OrderExtension
  SimpleOrder2:
    type: object
    properties:
      id:
        type: integer
        format: int64
      extensions:
        # produces a Map
        # this is the simplest type safe method
        # in order to use values - a cast must be done
        #
        # @JsonProperty("extensions")
        # @Valid
        # private Map<String, Object> extensions = null;
        #
        type: object
        additionalProperties:
          type: object
        x-amdocs:
          refDefinition: SecondOrder
  SimpleOrder3:
    type: object
    properties:
      id:
        type: integer
        format: int64
      extensions:
        # produces Extensions object which inherit from Map
        # not very comfortable as there is a missing copy-constructor for Extensions
        # the type Extension is redundant
        #
        # public class Extensions extends HashMap<String, Object>  {
        # ---
        # @JsonProperty("extensions")
        # private Extensions extensions = null;
        #
        $ref: '#/definitions/Extensions'
        x-amdocs:
          refDefinition: OrderExtension
  ComplexOrder:
    allOf:
      - $ref: '#/definitions/Object1'
      - $ref: '#/definitions/Object2'
      - $ref: '#/definitions/Extendable'
        x-amdocs:
          refDefinition: OrderExtendable
        #
        # Produces a Map simple and typesafe accessor
        #
        # @JsonProperty("extensions")
        # @Valid
        # private Map<String, Object> extensions = null;
        #
      - type: object
        properties:
          id:
            type: integer
            format: int64
          nested:
            $ref: '#/definitions/ComplexOrder'
  OrderExtension:
    type: object
    properties:
      payload:
        type: object
  OrderExtensionOther:
    type: object
    properties:
      payloadOther:
        type: object
  OrderExtendable:
    type: object
    properties:
      extensions:
        $ref: '#/definitions/OrderExtension'
    swagger: '2.0'